AWSTemplateFormatVersion: 2010-09-09
Description: A Node.js web application deployed to AWS Lambda.
Parameters:
  ProjectId:
    Type: String
    Description: Project ID.
    AllowedPattern: '^[a-z]([a-z0-9-])+$'
    ConstraintDescription: >-
      Project IDs must be between 2 and 15 characters, begin with a letter, and
      only contain lowercase letters, numbers, and hyphens (-).
    MinLength: 2
    MaxLength: 15
  RepositoryName:
    Type: String
    Description: AWS CodeCommit repository name.
    MinLength: 1
    MaxLength: 100
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: 1
    MaxLength: 100
Metadata:
  CodeBuildImage: 'aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0'
  CodeBuildImageOverride: 'aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0'
  IsWebsite: true
  ProjectTemplateId: webapp-nodeweb-lambda
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - ProjectId
        Label:
          default: Application
  WebsiteS3Bucket: !Ref WebsiteS3Bucket
Outputs:
  LambdaTrustRole:
    Description: AWS CodeStar role for AWS Lambda used for passRole to Lambda functions.
    Value: !GetAtt
      - LambdaTrustRole
      - Arn
    Export:
      Name: !Join
        - '-'
        - - !Ref ProjectId
          - !Ref 'AWS::Region'
          - LambdaTrustRole
Resources:
  CodeBuildPolicy:
    Condition: CreateCodeBuildResources
    Type: 'AWS::IAM::Policy'
    Description: Setting IAM policy for service role for Amazon EC2 instances
    Properties:
      PolicyName: CodeStarWorkerCodeBuildPolicy
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
            Effect: Allow
          - Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
            Effect: Allow
          - !If
            - CreateWebSiteS3Bucket
            - Action:
                - 's3:PutObject*'
                - 's3:GetObject'
                - 's3:GetObjectVersion'
              Resource:
                - !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref WebsiteS3Bucket
                - !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref WebsiteS3Bucket
                    - /*
              Effect: Allow
            - !Ref 'AWS::NoValue'
          - Action:
              - 'codecommit:GitPull'
            Resource:
              - !Join
                - ':'
                - - arn
                  - aws
                  - codecommit
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Ref RepositoryName
            Effect: Allow
          - Action:
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Resource:
              - !Join
                - ':'
                - - 'arn:aws:kms'
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Join
                    - /
                    - - alias
                      - aws/s3
            Effect: Allow
      Roles:
        - !Ref CodeBuildRole
  CodeBuildRole:
    Condition: CreateCodeBuildResources
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      Path: /
      RoleName: !Join
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CodeBuild
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
  S3ArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Condition:
              Bool:
                'aws:SecureTransport': false
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt
                  - CodePipelineTrustRole
                  - Arn
                - !GetAtt
                  - CodeBuildRole
                  - Arn
                - !GetAtt
                  - CloudFormationTrustRole
                  - Arn
            Sid: WhitelistedGet
          - Action:
              - 's3:PutObject'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt
                  - CodePipelineTrustRole
                  - Arn
                - !GetAtt
                  - CodeBuildRole
                  - Arn
            Sid: WhitelistedPut
        Id: SSEAndSSLPolicy
  CodePipelineTrustRole:
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      Path: /
      RoleName: !Join
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CodePipeline
      Policies:
        - PolicyName: CodeStarWorkerCodePipelineRolePolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref S3Bucket
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref S3Bucket
                      - /*
                Effect: Allow
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource:
                  - !Join
                    - ':'
                    - - arn
                      - aws
                      - codecommit
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Ref RepositoryName
                Effect: Allow
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StopBuild'
                Resource:
                  - !GetAtt
                    - CodeBuildProject
                    - Arn
                Effect: Allow
              - Action:
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                Resource:
                  - !Join
                    - ':'
                    - - arn
                      - aws
                      - cloudformation
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Join
                        - /
                        - - stack
                          - !Join
                            - '-'
                            - - awscodestar
                              - !Ref ProjectId
                              - lambda
                          - '*'
                Effect: Allow
              - Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt
                    - CloudFormationTrustRole
                    - Arn
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Sid: 1
  SyncInitialResources:
    DependsOn:
      - SeedRepo
    Type: 'AWS::CodeStar::SyncResources'
    Description: Adding the AWS CodeCommit repository to your AWS CodeStar project.
    Version: 1
    Properties:
      ProjectId: !Ref ProjectId
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
      - CodeBuildPolicy
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: codepipeline
        Packaging: zip
      Description: !Join
        - ''
        - - 'AWS CodeStar created CodeBuild Project for '
          - !Ref AppName
      ServiceRole: !Ref CodeBuildRole
      Environment:
        Type: container
        EnvironmentVariables:
          - Value: !Ref S3Bucket
            Name: S3_BUCKET
          - Value: !If
              - CreateWebSiteS3Bucket
              - !Join
                - ''
                - - 'https://s3.amazonaws.com/'
                  - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_PREFIX
          - Value: !If
              - CreateWebSiteS3Bucket
              - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_BUCKET
        Image: 'aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0'
        ComputeType: small
      Source:
        Type: codepipeline
      Name: !Ref ProjectId
  CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: !Join
        - ''
        - - !Ref ProjectId
          - ' project repository'
  SourceEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt
            - CodeCommitRepo
            - Arn
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
        source:
          - aws.codecommit
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      State: ENABLED
      Targets:
        - Id: ProjectPipelineTarget
          Arn: !Join
            - ':'
            - - arn
              - aws
              - codepipeline
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Join
                - '-'
                - - !Ref ProjectId
                  - Pipeline
          RoleArn: !GetAtt
            - SourceEventRole
            - Arn
      Name: !Join
        - '-'
        - - awscodestar
          - !Ref ProjectId
          - SourceEvent
  CloudFormationTrustRole:
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      Path: /
      RoleName: !Join
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CloudFormation
      Policies:
        - PolicyName: CodeStarWorkerCloudFormationRolePolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref S3Bucket
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref S3Bucket
                      - /*
                Effect: Allow
              - Action:
                  - 'codestar:SyncResources'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteFunction'
                  - 'lambda:AddPermission'
                  - 'lambda:UpdateFunction'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:GetFunction'
                  - 'lambda:GetFunctionConfiguration'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 'lambda:RemovePermission'
                  - 'lambda:listTags'
                  - 'lambda:TagResource'
                  - 'lambda:UntagResource'
                  - 'apigateway:*'
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteTable'
                  - 'dynamodb:DescribeTable'
                  - 'kinesis:CreateStream'
                  - 'kinesis:DeleteStream'
                  - 'kinesis:DescribeStream'
                  - 'sns:CreateTopic'
                  - 'sns:DeleteTopic'
                  - 'sns:ListTopics'
                  - 'sns:GetTopicAttributes'
                  - 'sns:SetTopicAttributes'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 'config:DescribeConfigRules'
                  - 'config:PutConfigRule'
                  - 'config:DeleteConfigRule'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt
                    - LambdaTrustRole
                    - Arn
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateChangeSet'
                Resource:
                  - >-
                    arn:aws:cloudformation:us-east-1:aws:transform/Serverless-2016-10-31
                  - 'arn:aws:cloudformation:us-east-1:aws:transform/CodeStar'
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
  SourceEventRole:
    Type: 'AWS::IAM::Role'
    Description: >-
      IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline
      execution
    Properties:
      RoleName: !Join
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CloudWatchEventRule
      Policies:
        - PolicyName: CodeStarWorkerCloudWatchEventPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 'codepipeline:StartPipelineExecution'
                Resource:
                  - !Join
                    - ':'
                    - - arn
                      - aws
                      - codepipeline
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - !Join
                        - '-'
                        - - !Ref ProjectId
                          - Pipeline
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Sid: 1
  S3Bucket:
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - pipe
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Join
            - '-'
            - - !Ref ProjectId
              - S3Bucket
          Key: Name
  SyncResources:
    DependsOn:
      - SeedRepo
      - CodeBuildProject
      - ProjectPipeline
      - SyncInitialResources
    Type: 'AWS::CodeStar::SyncResources'
    Description: Adding all created resources to your AWS CodeStar project
    Version: 1
    Properties:
      ProjectId: !Ref ProjectId
  EnvironmentEC2389b5e1635bc11e8a0091b4f9c04c7e9:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Repositories:
        - PathComponent: /serverless-lab
          RepositoryUrl: >-
            https://git-codecommit.us-east-1.amazonaws.com/v1/repos/serverless-lab
      OwnerArn: 'arn:aws:iam::807578712478:user/masterbuilder_dev'
      Description: Created from CodeStar.
      AutomaticStopTimeMinutes: '30'
      SubnetId: subnet-6f136f0a
      InstanceType: t2.small
      Name: serverless-lab
  ProjectPipeline:
    DependsOn:
      - SeedRepo
      - LambdaTrustRole
      - CodePipelineTrustRole
      - S3Bucket
      - CodeBuildProject
      - CloudFormationTrustRole
    Type: 'AWS::CodePipeline::Pipeline'
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Stages:
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Source
                Version: 1
                Provider: CodeCommit
              Configuration:
                PollForSourceChanges: false
                RepositoryName: !Ref RepositoryName
                BranchName: master
              InputArtifacts: []
              OutputArtifacts:
                - Name: !Join
                    - '-'
                    - - !Ref ProjectId
                      - SourceArtifact
              RunOrder: 1
              Name: ApplicationSource
          Name: Source
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProjectId
              InputArtifacts:
                - Name: !Join
                    - '-'
                    - - !Ref ProjectId
                      - SourceArtifact
              OutputArtifacts:
                - Name: !Join
                    - '-'
                    - - !Ref ProjectId
                      - BuildArtifact
              RunOrder: 1
              Name: PackageExport
          Name: Build
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: !Join
                  - ''
                  - - !Ref ProjectId
                    - '-BuildArtifact'
                    - '::template-export.yml'
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ParameterOverrides: !Join
                  - ''
                  - - '{"ProjectId":"'
                    - !Ref ProjectId
                    - '"}'
                ChangeSetName: pipeline-changeset
                RoleArn: !GetAtt
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Join
                  - '-'
                  - - awscodestar
                    - !Ref ProjectId
                    - lambda
              InputArtifacts:
                - Name: !Join
                    - '-'
                    - - !Ref ProjectId
                      - BuildArtifact
              OutputArtifacts: []
              RunOrder: 1
              Name: GenerateChangeSet
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName: !Join
                  - '-'
                  - - awscodestar
                    - !Ref ProjectId
                    - lambda
              InputArtifacts: []
              OutputArtifacts: []
              RunOrder: 2
              Name: ExecuteChangeSet
          Name: Deploy
      RoleArn: !GetAtt
        - CodePipelineTrustRole
        - Arn
      Name: !Join
        - '-'
        - - !Ref ProjectId
          - Pipeline
  LambdaTrustRole:
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for AWS Lambda
    Properties:
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole'
      RoleName: !Join
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - Lambda
      Policies:
        - PolicyName: CodeStarLambdaWorkerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
  SeedRepo:
    DeletionPolicy: Retain
    DependsOn:
      - CodeCommitRepo
    Type: 'AWS::CodeStar::SeedRepository'
    Description: >-
      Adding application source code to the AWS CodeCommit repository for the
      project
    Properties:
      DefaultBranchName: master
      RepositoryURL: !GetAtt
        - CodeCommitRepo
        - CloneUrlHttp
      ProjectTemplateId: >-
        arn:aws:codestar:us-east-1::project-template/codecommit/webapp-nodeweb-lambda
      RepositoryProvider: CodeCommit
  CodeStarProject:
    Type: 'AWS::CodeStar::Project'
    Description: Starting project creation
    Version: 1
    Properties:
      ProjectName: !Ref AppName
      ProjectId: !Ref ProjectId
      ProjectDescription: AWS CodeStar created project
      ProjectTemplateId: >-
        arn:aws:codestar:us-east-1::project-template/codecommit/webapp-nodeweb-lambda
      StackId: !Ref 'AWS::StackId'
  WebsiteS3Bucket:
    Condition: CreateWebSiteS3Bucket
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for Website static artifacts
    Properties:
      BucketName: !Join
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - app
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Join
            - '-'
            - - !Ref ProjectId
              - WebsiteS3Bucket
          Key: Name
Transform:
  - 'AWS::CodeStar'
Conditions:
  CreateWebSiteS3Bucket: !Equals
    - true
    - true
  CreateCodeBuildResources: !Equals
    - true
    - true